# ----- Global Settings & Hyperparameters -----
# These settings can be overridden by the CLI.
root        : ~                                                                 # Root directory of the current run.
task        : &task "depth"                                                     # Task name (e.g., detect, segment, classify).
mode        : &mode "train"                                                     # Mode name (e.g., train, val, test, predict, export).
arch        : &arch "dav2"                                                      # Model architecture or family (e.g., resnet).
model       : &model "dav2_vits"                                                # Model name (e.g., resnet50).
data        : &data ~                                                           # Dataset name (e.g., cifar10) or directory (e.g., data/cifar10).
fullname    : &fullname "dav2_vits"                                             # Full name of the current run (e.g., resnet50_cifar10_01). If not set, it will be this file's name.
save_dir    : &save_dir ~                                                       # Saving directory. If not set, it will be `root/arch/model/data`.
weights     : &weights "zoo/vision/types/depth/dav2/dav2_vits/pretrained/dav2_vits.pth"  # Path to the pretrained weights.
device      : &device 0                                                         # Running device (i.e., cuda:0 | cuda:0,1,2,3 | cpu).
seed        : &seed 2                                                           # Random seed.
imgsz       : &imgsz 518                                                        # Image size for the model.
# Train
resume      : &resume ~                                                         # Resume from interrupted training.
tuning      : &tuning  ~                                                        # Fine-tuning from a pretrained model.
epochs      : &epochs -1                                                        # Training epochs.
batch_size  : &batch_size 1                                                     # Batch size.
torchrun    : False                                                             # If ``True``, use torch.distributed.run to run the training script.
master_port : 7777                                                              # Master port for distributed training.
master_addr : "localhost"                                                       # Master address for distributed training.
local_rank  : -1                                                                # Local rank for distributed training.
# Predict
resize      : False                                                             # Resize the input image to `imgsz`.
benchmark   : False                                                             # Benchmark the model.
# Save & Visualize
save_result : &save_result True                                                 # Save the result of the model.
save_image  : &save_image True                                                  # Save the output image.
save_debug  : &save_debug False                                                 # Save the debug information.
use_fullname: True                                                              # Use the full name for the save_dir.
keep_subdirs: False                                                             # Keep subdirectories in the save_dir.
save_nearby : False                                                             # Save outputs nearby the source.
exist_ok    : &exist_ok True                                                    # If ``False``, it will delete the save directory if it already exists.
verbose     : &verbose True                                                     # Verbosity.
# Export
format        : "onnx"                                                          # Export format (e.g., onnx, engine, torchscript, coreml, tflite, openvino).
opset         : 16                                                              # ONNX: opset version.
simplify      : False                                                           # ONNX: Simplify model using `onnxslim`.
trt_precision : "fp32"                                                          # TRT: Precision mode (e.g., fp32, fp16, int8).
max_batch_size: 32                                                              # TRT: Max batch size for export.
opt_batch_size: 16                                                              # TRT: Optimize batch size for export.
min_batch_size: 1                                                               # TRT: Min batch size for export.
# Custom config.yaml
cfg: ~                                                                          # For overriding settings defined in this file.

# ----- Modules -----
# Network
network: &network                                                               # Network architecture.
  encoder     : "vits"
  features    : 64
  out_channels: [48, 96, 192, 384]
  pred_only   : True
  format      : 2  # 0: grayscale, 1: color, 2: both

# Model-module (Note: I want to name this `model`, but it conflicts with the `model` key in the basic section)
modelmodule:
  name     : *model                                                             # Model name (e.g., resnet50).
  root     : *save_dir                                                          # Root directory of the current run.
  fullname : *fullname                                                          # Full name of the current run (e.g., resnet50_cifar10_01).
  <<       : *network                                                           # Network architecture.
  weights  : *weights                                                           # Path to the pretrained weights.
  optimizer: ~                                                                  # Optimizer(s).
  loss     : ~                                                                  # Loss function.
  metrics  : ~                                                                  # Metrics for evaluation.
  debug    : *save_debug
  verbose  : *verbose                                                           # Verbosity.
